---
title: "ROICalc-vignette"
output: rmarkdown::html_vignette
vignette: >
  %\VignetteIndexEntry{ROICalc-vignette}
  %\VignetteEngine{knitr::rmarkdown}
  %\VignetteEncoding{UTF-8}
---

```{r, include = FALSE}
knitr::opts_chunk$set(
  collapse = TRUE,
  comment = "#>"
)
```

#Welcome to the ROI Calculator

This package will allow you to easily calculate the return on a stock investment purchase.
For illustration purposes, it also includes a sample data set of return calculations, which
you can explore.

## Step 1: Load Packages

If you haven't already, load or install the _ROICalc_ package from the .tar file.
If you do not have _magicfor_ please download and install it from CRAN.
```{r}
# Load Packages
library(ROICalc) # Loads the calculator package
library(magicfor) # Loads a formatting package.
```

## Step 2: The Dataset

The following examples show how we can use the example dataset to determine the return on a 
certain or multiple investments. It is important to note that the example dataset only includes
a single purchase price and so it will allow you to explore the impact of various different sell
prices. If you are interested, you can populate the example dataset with more purchase prices 
and use the _Investment Calculator_ to evaluate the values.

The two examples below identify the dataset "roi_calcs", and are choosing the field named "SP" - sale price.
It then says within that field, find only the values within the same table under the "Net" or "Perc" field
that are _Greater than or equal to_ the value of "0" or "0.05". The values that are return are all of the prices 
at which you can sell the stocks and meet the aforementioned evaluators.
```{r Dataset Examples}
# Dataset Examples
#
# Identify the sale prices that will only return a positive investment.

roi_calcs$SP[roi_calcs$Net >= 0]

# Identify the sale prices that will only return an investment with a 5% or greater return.

roi_calcs$SP[roi_calcs$Perc >= 0.05]

```

## Step 3: The _InvestmentCalculator_

The _InvestmentCalculator_ is a simple tool which allows us to input the intial investment, the fee charged by our broker
to make a trade. The number of trades required to purchase the number of shares sought. The price at which the shares will
be bought and sold. And the number of trades required to sell the intended number of shares. In the example below, the calculator
returns 982.1178, meaning that on our investment we made a profit of $982.12.
```{r}
# Calculator Examples
#
# Calculate the nominal return on an initial investment of $5000, with a trading fee of $50. All of the shares will be purchased in 1 transaction.
# The share purchase price is $55.67. The share sale price is $67.84. All of the shares will be sold in 1 transaction.
ROICalc:::InvestmentCalculator(5000, 50, 1, 55.67, 67.84, 1)
```

## Step 4: Iterating the _InvestmentCalculator_

To expand on the utility of the _InvestmentCalculator_, we include the information required to generate
investment scenarios. To utilize, please copy the code into your console or script to run the function.
In this first example, for a set of purchase prices, "$1" and "$3", we are asking the the _InvestmentCalculator_
to tell us what the profit/loss will be on a set investment amount, at a set sale price, for every deci-value
between $1 and $3. Meaning: $1.0, $1.1, $1.2, ... , $2.8, $2.9, $3.0. 
Using _magicfor_ the function will export the values to a new dataframe, while also producing the table below.
The first column is the iteration number, the second column identies the purchase price, and the third column
tells us what the investment return will be.


### Iterating Purchase Price
```{r Return based on a Set Sale Price, for Varying Purchase Prices}
# Calculator Examples

#Return based on a Set Sale Price, for Varying Purchase Prices
magic_for(print, silent = TRUE) #This is for formatting.
for (PP in seq(1, 3, by = 0.1)){ #The set of purchase values you wish to evaluate at what interval (whole dollars = 1, ten cents = 0.1, single cents = 0.01)
IA <- 5000 # The initial investment
Fee <- 1 # The trade fee
PT <- 1 # The number of trade transactions to purchase the shares
SP <- 2 # The price at which the shares will be sold.
ST <- 1 # The number of trade transactions to sell the shares
  Return  <- ROICalc:::InvestmentCalculator(IA, Fee, PT, PP, SP, ST)
  print(Return)
}
magic_result_as_dataframe() #This is for formatting.
```

### Iterating Sale Price

This second example, the function runs identically as described above, expect for a series of sale prices
for a set purchase price. 

```{r Return based on a Set Purchase Price, for Varying Sale Prices}
# Calculator Examples
#
#Return based on a Set Purchase Price, for Varying Sale Prices
magic_for(print, silent = TRUE) #This is for formatting.
for (SP in seq(1, 3, by = 0.1)){ #The set of purchase values you wish to evaluate at what interval (whole dollars = 1, ten cents = 0.1, single cents = 0.01)
IA <- 5000 # The initial investment
Fee <- 1 # The trade fee
PT <- 1 # The number of trade transactions to purchase the shares
PP <- 1 # The price at which the shares will be purchased
ST <- 1 # The number of trade transactions to sell the shares
  Return  <- ROICalc:::InvestmentCalculator(IA, Fee, PT, PP, SP, ST)
  print(Return)
}
magic_result_as_dataframe() #This is for formatting.
```

# Thank you!
## Thank you for using ROICalc, we hope this Vignette has been helpful.
### For any questions, please contact <SearsSL@McMaster.ca>
